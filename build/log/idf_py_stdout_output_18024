[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\ESP32-IDF\Espressif\frameworks\tcp\build\bootloader\esp-idf\esptool_py && D:\ESP32-IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP32-IDF/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/ESP32-IDF/Espressif/frameworks/tcp/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
D:/ESP32-IDF/Espressif/frameworks/tcp/main/app_main.c: In function 'mqtt_event_handler':
D:/ESP32-IDF/Espressif/frameworks/tcp/main/app_main.c:102:52: warning: this statement may fall through [-Wimplicit-fallthrough=]
  102 |         if (strcmp(event->data, "RELAY1:OFF") == 0 || strcmp(event->data, "RELAY1:0") == 0) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
D:/ESP32-IDF/Espressif/frameworks/tcp/main/app_main.c:105:5: note: here
  105 |     case MQTT_EVENT_ERROR:
      |     ^~~~
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable mqtt_tcp.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/ESP32-IDF/Espressif/frameworks/tcp/build/mqtt_tcp.bin
[7/7] cmd.exe /C "cd /D D:\ESP32-IDF\Espressif\frameworks\tcp\build\esp-idf\esptool_py && D:\ESP32-IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP32-IDF/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/ESP32-IDF/Espressif/frameworks/tcp/build/partition_table/partition-table.bin D:/ESP32-IDF/Espressif/frameworks/tcp/build/mqtt_tcp.bin"
mqtt_tcp.bin binary size 0xd7c90 bytes. Smallest app partition is 0x100000 bytes. 0x28370 bytes (16%) free.
